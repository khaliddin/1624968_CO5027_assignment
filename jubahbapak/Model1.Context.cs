//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace jubahbapak
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseEntities : DbContext
    {
        public DatabaseEntities()
            : base("name=DatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<prod_table> prod_table { get; set; }
        public virtual DbSet<tblImage> tblImages { get; set; }
    
        public virtual int sp_img_INS(Nullable<int> width, Nullable<int> height, string alText, string extension, string imgName)
        {
            var widthParameter = width.HasValue ?
                new ObjectParameter("width", width) :
                new ObjectParameter("width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(int));
    
            var alTextParameter = alText != null ?
                new ObjectParameter("alText", alText) :
                new ObjectParameter("alText", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("extension", extension) :
                new ObjectParameter("extension", typeof(string));
    
            var imgNameParameter = imgName != null ?
                new ObjectParameter("imgName", imgName) :
                new ObjectParameter("imgName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_img_INS", widthParameter, heightParameter, alTextParameter, extensionParameter, imgNameParameter);
        }
    }
}
